// Generated by cpp11: do not edit by hand
// clang-format off

#include <cpp11/R.hpp>
#include <Rcpp.h>
using namespace Rcpp;
#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>
#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
#endif

RcppExport SEXP _rcpp_module_boot_stan_fit4nbhd_glmm_mod();


// model_setup.cpp
list find_relevant(integers nbhd, list graph);
extern "C" SEXP _nbhdmodel_find_relevant(SEXP nbhd, SEXP graph) {
  BEGIN_CPP11
    return cpp11::as_sexp(find_relevant(cpp11::as_cpp<cpp11::decay_t<integers>>(nbhd), cpp11::as_cpp<cpp11::decay_t<list>>(graph)));
  END_CPP11
}
// model_setup.cpp
doubles check_incl(integers idx, logicals incl, integers rings, doubles dists, list graph);
extern "C" SEXP _nbhdmodel_check_incl(SEXP idx, SEXP incl, SEXP rings, SEXP dists, SEXP graph) {
  BEGIN_CPP11
    return cpp11::as_sexp(check_incl(cpp11::as_cpp<cpp11::decay_t<integers>>(idx), cpp11::as_cpp<cpp11::decay_t<logicals>>(incl), cpp11::as_cpp<cpp11::decay_t<integers>>(rings), cpp11::as_cpp<cpp11::decay_t<doubles>>(dists), cpp11::as_cpp<cpp11::decay_t<list>>(graph)));
  END_CPP11
}
// post_calc.cpp
doubles pr_incl(doubles_matrix<> base_linpred, doubles ranef);
extern "C" SEXP _nbhdmodel_pr_incl(SEXP base_linpred, SEXP ranef) {
  BEGIN_CPP11
    return cpp11::as_sexp(pr_incl(cpp11::as_cpp<cpp11::decay_t<doubles_matrix<>>>(base_linpred), cpp11::as_cpp<cpp11::decay_t<doubles>>(ranef)));
  END_CPP11
}
// sim_helper.cpp
list get_within_ring(int ring, int start, list graph);
extern "C" SEXP _nbhdmodel_get_within_ring(SEXP ring, SEXP start, SEXP graph) {
  BEGIN_CPP11
    return cpp11::as_sexp(get_within_ring(cpp11::as_cpp<cpp11::decay_t<int>>(ring), cpp11::as_cpp<cpp11::decay_t<int>>(start), cpp11::as_cpp<cpp11::decay_t<list>>(graph)));
  END_CPP11
}
// sim_helper.cpp
logicals_matrix<> sim_incl(doubles_matrix<> base_linpred, doubles ranef);
extern "C" SEXP _nbhdmodel_sim_incl(SEXP base_linpred, SEXP ranef) {
  BEGIN_CPP11
    return cpp11::as_sexp(sim_incl(cpp11::as_cpp<cpp11::decay_t<doubles_matrix<>>>(base_linpred), cpp11::as_cpp<cpp11::decay_t<doubles>>(ranef)));
  END_CPP11
}
// sim_helper.cpp
logicals_matrix<> fix_incl_mat(integers idx, logicals_matrix<> incl, integers rings, doubles dists, list graph);
extern "C" SEXP _nbhdmodel_fix_incl_mat(SEXP idx, SEXP incl, SEXP rings, SEXP dists, SEXP graph) {
  BEGIN_CPP11
    return cpp11::as_sexp(fix_incl_mat(cpp11::as_cpp<cpp11::decay_t<integers>>(idx), cpp11::as_cpp<cpp11::decay_t<logicals_matrix<>>>(incl), cpp11::as_cpp<cpp11::decay_t<integers>>(rings), cpp11::as_cpp<cpp11::decay_t<doubles>>(dists), cpp11::as_cpp<cpp11::decay_t<list>>(graph)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_nbhdmodel_check_incl",      (DL_FUNC) &_nbhdmodel_check_incl,      5},
    {"_nbhdmodel_find_relevant",   (DL_FUNC) &_nbhdmodel_find_relevant,   2},
    {"_nbhdmodel_fix_incl_mat",    (DL_FUNC) &_nbhdmodel_fix_incl_mat,    5},
    {"_nbhdmodel_get_within_ring", (DL_FUNC) &_nbhdmodel_get_within_ring, 3},
    {"_nbhdmodel_pr_incl",         (DL_FUNC) &_nbhdmodel_pr_incl,         2},
    {"_nbhdmodel_sim_incl",        (DL_FUNC) &_nbhdmodel_sim_incl,        2},
    {"_rcpp_module_boot_stan_fit4nbhd_glmm_mod",  (DL_FUNC) &_rcpp_module_boot_stan_fit4nbhd_glmm_mod,  0},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_nbhdmodel(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
}
